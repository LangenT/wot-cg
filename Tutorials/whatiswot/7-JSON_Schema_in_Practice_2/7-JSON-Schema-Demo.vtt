WEBVTT

00:00:00.000 --> 00:00:06.575 
In the previous video, we talked about JSON Schema Basics, in this

00:00:06.575 --> 00:00:13.150 
video, we will continue with generic keywords, Schema composition, and Schema Conditionality.

00:00:13.150 --> 00:00:20.637 
Some of the annotation keywords used in JSON Schema are title, description, and default.

00:00:20.637 --> 00:00:28.125 
None of these annotation words are required but enhance good practice for self-documenting Schemas.

00:00:28.125 --> 00:00:32.750 
The title and description keywords must be strings.

00:00:32.750 --> 00:00:38.012 
The enum keyword is used to restrict a value to a fixed set of values.

00:00:38.012 --> 00:00:43.275 
It must be an array with at least one element, where each element is unique.

00:00:43.275 --> 00:00:51.712 
The const keyword is used to restrict a value to a single value.

00:00:51.712 --> 00:01:03.434 
JSON Schema includes a few keywords for combining Schemas together, the most used ones are allOf, anyOf, oneOf, and not.

00:01:03.434 --> 00:01:11.081 
All of these keywords must be set to an array, where each item is a Schema.

00:01:11.081 --> 00:01:19.190 
To validate allOf, the given data must be valid against all of the given sub Schemas.

00:01:19.190 --> 00:01:28.536 
To validate anyOf, the given data must be valid against any (one or more) of the given sub Schemas.

00:01:28.536 --> 00:01:37.092 
To validate oneOf, the given data must be valid against exactly one of the given sub Schemas.

00:01:37.092 --> 00:01:45.030 
The not keyword declares that an instance validates if it doesnâ€™t validate against the given sub Schema.

00:01:45.030 --> 00:01:52.155 
The if, then and else keywords allow the application of a sub Schema based on the outcome of

00:01:52.155 --> 00:01:59.280 
another Schema, as it is in other programming languages. If it is valid, then must also be valid

00:01:59.280 --> 00:02:06.405 
(and else is ignored.) If it is invalid, else must also be valid (and then ignored).

00:02:06.405 --> 00:02:12.455 
In the next video, we will show JSON Schema Validation process with code snippets.

